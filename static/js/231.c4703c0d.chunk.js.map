{"version":3,"file":"static/js/231.c4703c0d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import css from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = ({ text }) => {\n    return (\n        <button className={css.button} type=\"button\">{text}</button>\n    );\n};\n\nButton.propTypes = {\n    text: PropTypes.string.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetailsPage_movieDetailsContainer__RRyXo\"};","import { useEffect, useState, Suspense } from \"react\";\nimport { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"../../services/themoviedb-api\";\nimport { Button } from \"components/Button/Button\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from \"./MovieDetailsPage.module.css\";\n\nconst MovieDetailsPage = () => {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const movie = await fetchMovieDetails(movieId);\n                setMovieDetails(movie);\n            } catch (error) {\n                console.error(error);\n            }\n        })();\n    }, [movieId]);\n\n    if (!movieDetails) {\n        return <Loader />;\n    }\n\n    return (\n        <>\n            <Link to={backLinkHref}>\n                <Button text=\"← Go back\" />\n            </Link>\n\n            <div className={css.movieDetailsContainer}>\n                <img\n                    className={css.image}\n                    src={movieDetails.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                        : `https://fakeimg.pl/600x400?text=No+Image+Available`}\n                    alt={movieDetails.title} />\n                \n                <div className={css.movieDetailsWrap}>\n                    <h1>{movieDetails.title}</h1>\n                    <h4>User score: {Math.round(movieDetails.vote_average * 10)}%</h4>\n                    <h2>Genres</h2>\n                    <p>{movieDetails.genres.map(genre => (<span key={genre.id}> {genre.name}</span>))}</p>\n\n                </div>\n            </div>\n            \n            <hr />\n            <h3>Additional information</h3>\n            <Link to=\"cast\">\n                <Button text=\"Cast\" />\n            </Link>\n\n            <Link to=\"reviews\">\n                <Button text=\"Reviews\" />\n            </Link>\n\n            <hr />\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetailsPage;","import axios from \"axios\";\n\nconst API_KEY = \"f963466200dc6de26d67255f760324c0\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: API_KEY, };\n\n\n//REFERENCE: https://developer.themoviedb.org/reference/trending-movies\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day`);\n    return response.data.results;\n};\n\n//REFERENCE: https://developer.themoviedb.org/reference/search-movie\nexport const fetchMovieByQuery = async movieName => {\n    const response = await axios.get(`search/movie?query=${movieName}`);\n    return response.data.results;\n};\n\n//REFERENCE: https://developer.themoviedb.org/reference/movie-details\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}`);\n    return response.data;\n};\n\n//REFERENCE: https://developer.themoviedb.org/reference/movie-credits\nexport const fetchMovieCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?`);\n    return response.data.cast;\n};\n\n//REFERENCE: https://developer.themoviedb.org/reference/movie-reviews\nexport const fetchMovieReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?`);\n    return response.data.results;\n};\n\n\n"],"names":["Button","_ref","text","_jsx","className","css","type","children","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","stop","_jsxs","_Fragment","Link","to","src","poster_path","concat","alt","title","Math","round","vote_average","genres","map","genre","name","id","Suspense","fallback","Loader","Outlet","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}